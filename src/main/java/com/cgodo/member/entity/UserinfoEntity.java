package com.cgodo.member.entity;

import com.cgodo.constant.EnumSpeakingStatus;
import com.cgodo.constant.EnumStatus;
import java.io.Serializable;
import java.util.Date;

public class UserinfoEntity implements Serializable {
    private String id;

    /**
     * 状态
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private EnumStatus status;

    /**
     * 版本号
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Long version;

    /**
     * 创建时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Date gmtCreated;

    /**
     * 修改时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Date gmtUpdated;

    /**
     * 用户名
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private String userName;

    /**
     * 密码
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private String password;

    /**
     * 用户类型
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private String userType;

    /**
     * 图片
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private String imgUrl;

    /**
     * 昵称
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private String nickName;

    /**
     * 第一次登陆时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Date firstTime;

    /**
     * 最后登陆时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Date lastTime;

    private EnumSpeakingStatus speakingStatus;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id == null ? null : id.trim();
    }

    /**
     * 状态
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public EnumStatus getStatus() {
        return status;
    }

    /**
     * 状态
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setStatus(EnumStatus status) {
        this.status = status;
    }

    /**
     * 版本号
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Long getVersion() {
        return version;
    }

    /**
     * 版本号
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setVersion(Long version) {
        this.version = version;
    }

    /**
     * 创建时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Date getGmtCreated() {
        return gmtCreated;
    }

    /**
     * 创建时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setGmtCreated(Date gmtCreated) {
        this.gmtCreated = gmtCreated;
    }

    /**
     * 修改时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Date getGmtUpdated() {
        return gmtUpdated;
    }

    /**
     * 修改时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setGmtUpdated(Date gmtUpdated) {
        this.gmtUpdated = gmtUpdated;
    }

    /**
     * 用户名
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public String getUserName() {
        return userName;
    }

    /**
     * 用户名
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setUserName(String userName) {
        this.userName = userName == null ? null : userName.trim();
    }

    /**
     * 密码
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public String getPassword() {
        return password;
    }

    /**
     * 密码
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setPassword(String password) {
        this.password = password == null ? null : password.trim();
    }

    /**
     * 用户类型
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public String getUserType() {
        return userType;
    }

    /**
     * 用户类型
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setUserType(String userType) {
        this.userType = userType == null ? null : userType.trim();
    }

    /**
     * 图片
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public String getImgUrl() {
        return imgUrl;
    }

    /**
     * 图片
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setImgUrl(String imgUrl) {
        this.imgUrl = imgUrl == null ? null : imgUrl.trim();
    }

    /**
     * 昵称
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public String getNickName() {
        return nickName;
    }

    /**
     * 昵称
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setNickName(String nickName) {
        this.nickName = nickName == null ? null : nickName.trim();
    }

    /**
     * 第一次登陆时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Date getFirstTime() {
        return firstTime;
    }

    /**
     * 第一次登陆时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setFirstTime(Date firstTime) {
        this.firstTime = firstTime;
    }

    /**
     * 最后登陆时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Date getLastTime() {
        return lastTime;
    }

    /**
     * 最后登陆时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setLastTime(Date lastTime) {
        this.lastTime = lastTime;
    }

    public EnumSpeakingStatus getSpeakingStatus() {
        return speakingStatus;
    }

    public void setSpeakingStatus(EnumSpeakingStatus speakingStatus) {
        this.speakingStatus = speakingStatus;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        UserinfoEntity other = (UserinfoEntity) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getStatus() == null ? other.getStatus() == null : this.getStatus().equals(other.getStatus()))
            && (this.getVersion() == null ? other.getVersion() == null : this.getVersion().equals(other.getVersion()))
            && (this.getGmtCreated() == null ? other.getGmtCreated() == null : this.getGmtCreated().equals(other.getGmtCreated()))
            && (this.getGmtUpdated() == null ? other.getGmtUpdated() == null : this.getGmtUpdated().equals(other.getGmtUpdated()))
            && (this.getUserName() == null ? other.getUserName() == null : this.getUserName().equals(other.getUserName()))
            && (this.getPassword() == null ? other.getPassword() == null : this.getPassword().equals(other.getPassword()))
            && (this.getUserType() == null ? other.getUserType() == null : this.getUserType().equals(other.getUserType()))
            && (this.getImgUrl() == null ? other.getImgUrl() == null : this.getImgUrl().equals(other.getImgUrl()))
            && (this.getNickName() == null ? other.getNickName() == null : this.getNickName().equals(other.getNickName()))
            && (this.getFirstTime() == null ? other.getFirstTime() == null : this.getFirstTime().equals(other.getFirstTime()))
            && (this.getLastTime() == null ? other.getLastTime() == null : this.getLastTime().equals(other.getLastTime()))
            && (this.getSpeakingStatus() == null ? other.getSpeakingStatus() == null : this.getSpeakingStatus().equals(other.getSpeakingStatus()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userinfo
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());
        result = prime * result + ((getVersion() == null) ? 0 : getVersion().hashCode());
        result = prime * result + ((getGmtCreated() == null) ? 0 : getGmtCreated().hashCode());
        result = prime * result + ((getGmtUpdated() == null) ? 0 : getGmtUpdated().hashCode());
        result = prime * result + ((getUserName() == null) ? 0 : getUserName().hashCode());
        result = prime * result + ((getPassword() == null) ? 0 : getPassword().hashCode());
        result = prime * result + ((getUserType() == null) ? 0 : getUserType().hashCode());
        result = prime * result + ((getImgUrl() == null) ? 0 : getImgUrl().hashCode());
        result = prime * result + ((getNickName() == null) ? 0 : getNickName().hashCode());
        result = prime * result + ((getFirstTime() == null) ? 0 : getFirstTime().hashCode());
        result = prime * result + ((getLastTime() == null) ? 0 : getLastTime().hashCode());
        result = prime * result + ((getSpeakingStatus() == null) ? 0 : getSpeakingStatus().hashCode());
        return result;
    }
}