package com.cgodo.server.entity;

import com.cgodo.constant.EnumStatus;
import java.io.Serializable;
import java.util.Date;

public class ClientRequestEntity implements Serializable {
    private String id;

    /**
     * 创建时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Date gmtCreated;

    /**
     * 修改时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Date gmtUpdated;

    /**
     * 数据状态，表示该数据对应的数据逻辑状态，如已删除，已修改等
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private EnumStatus status;

    /**
     * 该数据当前所属的版本，用来做事物控制
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Long version;

    /**
     * ip地址
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private String ip;

    /**
     * 请求时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Date requestTime;

    /**
     * 处理时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private Long processingTime;

    /**
     * 请求地址
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private String requestUrl;

    /**
     * 请求浏览器
     *
     * @mbggenerated do_not_delete_during_merge
     */
    private String userAgent;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table client_request
     *
     * @mbggenerated
     */
    private static final long serialVersionUID = 1L;

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id == null ? null : id.trim();
    }

    /**
     * 创建时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Date getGmtCreated() {
        return gmtCreated;
    }

    /**
     * 创建时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setGmtCreated(Date gmtCreated) {
        this.gmtCreated = gmtCreated;
    }

    /**
     * 修改时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Date getGmtUpdated() {
        return gmtUpdated;
    }

    /**
     * 修改时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setGmtUpdated(Date gmtUpdated) {
        this.gmtUpdated = gmtUpdated;
    }

    /**
     * 数据状态，表示该数据对应的数据逻辑状态，如已删除，已修改等
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public EnumStatus getStatus() {
        return status;
    }

    /**
     * 数据状态，表示该数据对应的数据逻辑状态，如已删除，已修改等
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setStatus(EnumStatus status) {
        this.status = status;
    }

    /**
     * 该数据当前所属的版本，用来做事物控制
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Long getVersion() {
        return version;
    }

    /**
     * 该数据当前所属的版本，用来做事物控制
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setVersion(Long version) {
        this.version = version;
    }

    /**
     * ip地址
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public String getIp() {
        return ip;
    }

    /**
     * ip地址
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setIp(String ip) {
        this.ip = ip == null ? null : ip.trim();
    }

    /**
     * 请求时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Date getRequestTime() {
        return requestTime;
    }

    /**
     * 请求时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setRequestTime(Date requestTime) {
        this.requestTime = requestTime;
    }

    /**
     * 处理时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public Long getProcessingTime() {
        return processingTime;
    }

    /**
     * 处理时间
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setProcessingTime(Long processingTime) {
        this.processingTime = processingTime;
    }

    /**
     * 请求地址
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public String getRequestUrl() {
        return requestUrl;
    }

    /**
     * 请求地址
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setRequestUrl(String requestUrl) {
        this.requestUrl = requestUrl == null ? null : requestUrl.trim();
    }

    /**
     * 请求浏览器
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public String getUserAgent() {
        return userAgent;
    }

    /**
     * 请求浏览器
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public void setUserAgent(String userAgent) {
        this.userAgent = userAgent == null ? null : userAgent.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_request
     *
     * @mbggenerated
     */
    @Override
    public boolean equals(Object that) {
        if (this == that) {
            return true;
        }
        if (that == null) {
            return false;
        }
        if (getClass() != that.getClass()) {
            return false;
        }
        ClientRequestEntity other = (ClientRequestEntity) that;
        return (this.getId() == null ? other.getId() == null : this.getId().equals(other.getId()))
            && (this.getGmtCreated() == null ? other.getGmtCreated() == null : this.getGmtCreated().equals(other.getGmtCreated()))
            && (this.getGmtUpdated() == null ? other.getGmtUpdated() == null : this.getGmtUpdated().equals(other.getGmtUpdated()))
            && (this.getStatus() == null ? other.getStatus() == null : this.getStatus().equals(other.getStatus()))
            && (this.getVersion() == null ? other.getVersion() == null : this.getVersion().equals(other.getVersion()))
            && (this.getIp() == null ? other.getIp() == null : this.getIp().equals(other.getIp()))
            && (this.getRequestTime() == null ? other.getRequestTime() == null : this.getRequestTime().equals(other.getRequestTime()))
            && (this.getProcessingTime() == null ? other.getProcessingTime() == null : this.getProcessingTime().equals(other.getProcessingTime()))
            && (this.getRequestUrl() == null ? other.getRequestUrl() == null : this.getRequestUrl().equals(other.getRequestUrl()))
            && (this.getUserAgent() == null ? other.getUserAgent() == null : this.getUserAgent().equals(other.getUserAgent()));
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table client_request
     *
     * @mbggenerated
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((getId() == null) ? 0 : getId().hashCode());
        result = prime * result + ((getGmtCreated() == null) ? 0 : getGmtCreated().hashCode());
        result = prime * result + ((getGmtUpdated() == null) ? 0 : getGmtUpdated().hashCode());
        result = prime * result + ((getStatus() == null) ? 0 : getStatus().hashCode());
        result = prime * result + ((getVersion() == null) ? 0 : getVersion().hashCode());
        result = prime * result + ((getIp() == null) ? 0 : getIp().hashCode());
        result = prime * result + ((getRequestTime() == null) ? 0 : getRequestTime().hashCode());
        result = prime * result + ((getProcessingTime() == null) ? 0 : getProcessingTime().hashCode());
        result = prime * result + ((getRequestUrl() == null) ? 0 : getRequestUrl().hashCode());
        result = prime * result + ((getUserAgent() == null) ? 0 : getUserAgent().hashCode());
        return result;
    }
}